version: '2.1'

executors:
  java:
    docker:
      - image: cimg/openjdk:21.0.2
    working_directory: ~/app
    environment:
      APP_NAME: topfilms-api
      APP_VERSION: 0.0.<< pipeline.number >>

  base:
    docker:
      - image: cimg/base:2024.02
    working_directory: ~/app
    resource_class: arm.medium
    environment:
      ORG_NAME: topfilms
      APP_NAME: topfilms-api
      APP_VERSION: 0.0.<< pipeline.number >>

  helm:
    docker:
      - image: cimg/deploy:2024.03.1
    working_directory: ~/app
    environment:
      APP_NAME: topfilms-api
      APP_VERSION: 0.0.<< pipeline.number >>
      KUBECONFIG: /home/circleci/.kube/config

orbs:
  docker: circleci/docker@2.6.0

jobs:
  java_test_build:
    executor: java

    steps:
      - checkout

      - run:
          name: Set version
          command: mvn versions:set -DnewVersion=$APP_VERSION

      - run:
          name: Run clean install
          command: mvn clean install

      - persist_to_workspace:
          root: '.'
          paths: '*'

      - store_artifacts:
          path: target
          destination: .

  docker_artifact_build_push:
    executor: base    

    steps:
      - attach_workspace:
          at: ~/app

      - setup_remote_docker
      
      - run:
          name: Docker build
          command: docker buildx build --platform linux/arm64/v8 . -t $DOCKER_USERNAME/$ORG_NAME-$APP_NAME:$APP_VERSION

      - run:
          name: Docker push
          command: |
            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
            docker push $DOCKER_USERNAME/$ORG_NAME-$APP_NAME:$APP_VERSION

  helm_artifact_build_push_deploy: 
    executor: helm    
    
    steps:
      - attach_workspace:
          at: ~/app

      - run:
          name: Add kube config
          command: |
            rm -rf /home/circleci/.kube
            mkdir /home/circleci/.kube
            echo -e $KUBE_CONFIG | sed 's/+/ /g' > /home/circleci/.kube/config
            chmod go-r /home/circleci/.kube/config

      - run:
          name: Helm authenticate registry
          command: echo "$DOCKER_PASSWORD" | helm registry login registry-1.docker.io --username $DOCKER_USERNAME --password-stdin

      - run:
          name: Helm package
          command: helm package helm/$APP_NAME --app-version=$APP_VERSION --version=$APP_VERSION

      - run:
          name: Helm artifact push
          command: helm push ./$APP_NAME-$APP_VERSION.tgz oci://registry-1.docker.io/$DOCKER_USERNAME

      - run:
          name: Helm deploy
          command: helm upgrade $APP_NAME ./$APP_NAME-$APP_VERSION.tgz --install --atomic --debug --history-max=3 -n topfilms --set image.tag=$APP_VERSION

workflows:
  deployment:
    jobs:
      - java_test_build:
          filters:
            branches:
              only: main
          context:
            - secrets
      - docker_artifact_build_push:
          filters:
            branches:
              only: main
          context:
            - secrets
          requires:
            - java_test_build
      - helm_artifact_build_push_deploy:
          filters:
            branches:
              only: main
          context:
            - secrets
          requires:
            - docker_artifact_build_push